# Copyright 2017 Yahoo Holdings. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.
namespace=vespa.config.content.core

mbusport int default=-1 restart

rpcport int default=6000 restart

# Limits for max pending concurrent number of operations towards a node before
# MessageBus starts busy-bouncing messages. Distributor and content nodes are
# treated separately. 0 means no limit.
mbus_distributor_node_max_pending_count int default=5000
mbus_content_node_max_pending_count int default=0

# Limits for max total amount of memory (in bytes) used by operations towards
# a node before MessageBus starts busy-bouncing messages. Distributor and
# content nodes are treated separately. 0 means no limit.
mbus_distributor_node_max_pending_size int default=0
mbus_content_node_max_pending_size int default=0

# Minimum size of packets to compress (0 means no compression)
mbus.compress.limit int default=1024 restart

## Compression level for packets
mbus.compress.level int default=3 restart

## Compression type for packets.
mbus.compress.type enum {NONE, LZ4, ZSTD} default=LZ4 restart

## TTL for rpc target cache
mbus.rpctargetcache.ttl double default = 600 restart

## Number of threads for mbus threadpool
## Any value below 1 will be 1.
mbus.num_threads int default=4 restart

mbus.optimize_for enum {LATENCY, THROUGHPUT, ADAPTIVE} default = LATENCY

## Enable to use above thread pool for encoding replies
## False will use network(fnet) thread
mbus.dispatch_on_encode bool default=true restart

## Enable to use above thread pool for decoding replies
## False will use network(fnet) thread
## Todo: Change default once verified in large scale deployment.
mbus.dispatch_on_decode bool default=false restart

## Skip messenger thread on reply
## Experimental
mbus.skip_reply_thread bool default=false restart

## Skip messenger thread on reply
## Experimental
mbus.skip_request_thread bool default=false restart

## Skip communication manager thread on mbus requests
## Experimental
skip_thread bool default=false

## Whether to use direct P2P RPC protocol for all StorageAPI communication
## instead of going via MessageBus.
## Deprecated, and will soon be gone as it is default on.
use_direct_storageapi_rpc bool default=true

## The number of network (FNET) threads used by the shared rpc resource.
rpc.num_network_threads int default=2 restart

## The number of events in the queue of a network (FNET) thread before it is woken up.
rpc.events_before_wakeup int default=1 restart

## The number of (FNET) RPC targets to use per node in the cluster.
##
## The bucket id associated with a message is used to select the RPC target.
## This ensures the same RPC target is used for all messages to the same bucket to the same node,
## and the RPC target itself handles sequencing of these messages.
## NB !! It is vital that this number is kept in sync with stor-filestor:num_network_threads.
## Only skilled vespa core developers should touch this.
rpc.num_targets_per_node int default=1 restart

# Minimum size of packets to compress (0 means no compression)
rpc.compress.limit int default=1024 restart

## Compression level for packets
rpc.compress.level int default=3 restart

## Compression type for packets.
rpc.compress.type enum {NONE, LZ4, ZSTD} default=LZ4 restart
